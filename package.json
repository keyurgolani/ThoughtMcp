{
  "name": "thoughtmcp",
  "version": "0.1.2",
  "description": "AI that thinks more like humans do - MCP server with human-like cognitive architecture for enhanced reasoning, memory, and self-monitoring",
  "main": "dist/index.js",
  "type": "module",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "types": "./dist/index.d.ts"
    },
    "./cognitive": {
      "import": "./dist/cognitive/index.js",
      "types": "./dist/cognitive/index.d.ts"
    },
    "./server": {
      "import": "./dist/server/CognitiveMCPServer.js",
      "types": "./dist/server/CognitiveMCPServer.d.ts"
    },
    "./utils": {
      "import": "./dist/utils/index.js",
      "types": "./dist/utils/index.d.ts"
    }
  },
  "bin": {
    "thoughtmcp": "./dist/index.js"
  },
  "files": [
    "dist/**/*",
    "README.md",
    "LICENSE",
    "package.json",
    "cognitive.config.json"
  ],
  "scripts": {
    "build": "tsc",
    "dev": "tsx src/index.ts",
    "start": "node dist/index.js",
    "test": "vitest",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:framework": "vitest run src/__tests__/framework/TestRunner.test.ts",
    "test:cognitive": "vitest run -t 'cognitive'",
    "test:performance": "vitest run -t 'performance'",
    "test:integration": "vitest run -t 'integration'",
    "test:unit": "vitest run --config vitest.config.ts src/__tests__/cognitive src/__tests__/utils src/__tests__/server --exclude='**/*integration*'",
    "test:compliance": "vitest run -t 'compliance'",
    "test:memory": "vitest run -t 'memory'",
    "test:bias": "vitest run -t 'bias'",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "type-check": "tsc --noEmit",
    "clean": "rm -rf dist",
    "validate": "npm run lint && npm run type-check && npm run test:run && npm run build",
    "validate:ci": "npm run lint && npm run type-check && npm run test:coverage && npm run build",
    "validate:strict": "npm run lint:strict && npm run type-check && npm run test:run && npm run build",
    "lint:strict": "eslint src/**/*.ts --max-warnings 0",
    "security:audit": "npm audit --audit-level=moderate",
    "security:check": "npm audit --audit-level=high",
    "quality:check": "npm run lint:strict && npm run type-check && npm run security:check",
    "dev:check": "./scripts/dev-check.sh",
    "dev:check:strict": "./scripts/dev-check.sh --strict",
    "dev:check:fast": "./scripts/dev-check.sh --skip-tests --skip-build",
    "fix:style": "npm run lint:fix",
    "fix:security": "npm audit fix",
    "check:any": "find src -name '*.ts' -exec grep -Hn ': any\\|as any\\|any\\[\\]' {} \\;",
    "check:debug": "find src -name '*.ts' -exec grep -Hn 'console\\.\\|debugger' {} \\;",
    "prepare": "husky install",
    "prepublishOnly": "npm run validate:ci",
    "example:demo": "npm run build && node dist/examples/cognitive-client.js",
    "example:benchmark": "npm run build && node dist/examples/cognitive-client.js --benchmark",
    "validate:mcp": "node scripts/validate-mcp-config.js",
    "setup:mcp": "npm run build && npm run validate:mcp"
  },
  "keywords": [
    "mcp",
    "cognitive",
    "ai",
    "reasoning",
    "neuroscience",
    "memory",
    "metacognition",
    "dual-process",
    "human-like",
    "thinking",
    "claude",
    "kiro",
    "cursor"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/keyurgolani/ThoughtMcp.git"
  },
  "bugs": {
    "url": "https://github.com/keyurgolani/ThoughtMcp/issues"
  },
  "homepage": "https://github.com/keyurgolani/ThoughtMcp#readme",
  "author": {
    "name": "Keyur Golani",
    "email": "keyurrgolani@gmail.com",
    "url": "https://github.com/keyurgolani"
  },
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.5.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.35.0",
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "@vitest/coverage-v8": "^3.2.4",
    "eslint": "^9.0.0",
    "globals": "^16.4.0",
    "husky": "^9.0.0",
    "tsx": "^4.0.0",
    "typescript": "^5.0.0",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
